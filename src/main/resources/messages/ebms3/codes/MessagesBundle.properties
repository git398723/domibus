#
# Copyright 2015 e-CODEX Project
#
# Licensed under the EUPL, Version 1.1 or – as soon they
# will be approved by the European Commission - subsequent
# versions of the EUPL (the "Licence");
# You may not use this work except in compliance with the
# Licence.
# You may obtain a copy of the Licence at:
# http://ec.europa.eu/idabc/eupl5
# Unless required by applicable law or agreed to in
# writing, software distributed under the Licence is
# distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied.
# See the Licence for the specific language governing
# permissions and limitations under the Licence.
#

EBMS_0001 = Although the message document is well formed and schema valid, some element/attribute contains a value that could not be recognized and therefore could not be used by the MSH.
EBMS_0002 = Although the message document is well formed and schema valid, some element/attribute value cannot be processed as expected because the related feature is not supported by the MSH.
EBMS_0003 = Although the message document is well formed and schema valid, some element/attribute value is inconsistent either with the content of other element/attribute, or with the processing mode of the MSH, or with the normative requirements of the ebMS specification.
EBMS_0004 = Other
EBMS_0005 = The MSH is experiencing temporary or permanent failure in trying to open a transport connection with a remote MSH.
EBMS_0006 = There is no message available for pulling from this MPC at this moment.
EBMS_0007 = The use of MIME is not consistent with the required usage in this specification.
EBMS_0008 = Although the message document is well formed and schema valid, the presence or absence of some element/ attribute is not consistent with the capability of the MSH, with respect to supported features.
EBMS_0009 = The ebMS header is either not well formed as an XML document, or does not conform to the ebMS packaging rules.
EBMS_0010 = The ebMS header or another header (e.g. reliability, security) expected by the MSH is not compatible with the expected content, based on the associated P-Mode.
EBMS_0011 = The MSH is unable to resolve an external payload reference (i.e. a Part that is not contained within the ebMS Message, as identified by a PartInfo/href URI).

EBMS_0101 = The signature in the Security header intended for the "ebms" SOAP actor, could not be validated by the Security module.
EBMS_0102 = The encrypted data reference the Security header intended for the "ebms" SOAP actor could not be decrypted by the Security Module.
EBMS_0103 = The processor determined that the message's security methods, parameters, scope or other security policy-level requirements or agreements were not satisfied.

EBMS_0201 = Some reliability function as implemented by the Reliability module, is not operational, or the reliability state associated with this message sequence is not valid.
EBMS_0202 = Although the message was sent under Guaranteed delivery requirement, the Reliability module could not get assurance that the message was properly delivered, in spite of resending efforts.

EBMS_0301 = A Receipt has not been received  for a message that was previously sent by the MSH generating this error.
EBMS_0302 = A Receipt has been received  for a message that was previously sent by the MSH generating this error, but the content does not match the message content (e.g. some part has not been acknowledged, or the digest associated does not match the signature digest, for NRR).
EBMS_0303 = An error occurred during the decompression.


EBMS_0020 = An Intermediary MSH was unable to route an ebMS message and stopped processing the message.
EBMS_0021 = An entry in the routing function is matched that assigns the message to an MPC for pulling, but the intermediary MSH is unable to store the message with this MPC
EBMS_0022 = An intermediary MSH has assigned the message to an MPC for pulling and has successfully stored it. However the intermediary set a limit on the time it was prepared to wait for the message to be pulled, and that limit has been reached.
EBMS_0023 = An MSH has determined that the message is expired and will not attempt to forward or deliver it.

EBMS_0030 = The structure of a received bundle is not in accordance with the bundling rules.
EBMS_0031 = A message unit in a bundle was not processed because a related message unit in the bundle caused an error.

EBMS_0040 = A fragment is received that relates to a group that was previously rejected.
EBMS_0041 = A fragment is received but more than one fragment message in a group of fragments specifies a value for this element.
EBMS_0042 = A fragment is received but more than one fragment message in a group of fragments specifies a value for this element.
EBMS_0043 = A fragment is received but more than one fragment message in a group of fragments specifies a value for this element.
EBMS_0044 = A fragment is received but more than one fragment message in a group of fragments specifies a value for this element.
EBMS_0045 = A fragment is received but more than one fragment message in a group of fragments specifies a value for a compression element.
EBMS_0046 = A fragment is received but a previously received fragment message had the same values for GroupId and FragmentNum
EBMS_0047 = The href attribute does not reference a valid MIME data part, MIME parts other than the fragment header and a data part are in the message. are added or the SOAP Body is not empty.
EBMS_0048 = An incoming message fragment has a a value greater than the known FragmentCount.
EBMS_0049 = A value is set for FragmentCount, but a previously received fragment had a greature value.

EBMS_0050 = The size of the data part in a fragment message is greater than Pmode[].Splitting.FragmentSize
EBMS_0051 = More time than Pmode[].Splitting.JoinInterval has passed since the first fragment was received but not all other fragments are received.
EBMS_0052 = Message properties were present in the fragment SOAP header that were not specified in Pmode[].Splitting.RoutingProperties
EBMS_0053 = The eb3:Message header copied to the fragment header does not match the eb3:Message header in the reassembled source message.
EBMS_0054 = Not enough disk space available to store all (expected) fragments of the group.
EBMS_0055 = An error occurred while decompressing the reassembled message.

EBMS_0060 = A responding MSH indicates that it applies the alternate MEP binding to the response message.














